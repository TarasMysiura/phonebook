{"version":3,"file":"static/js/438.cd16bca1.chunk.js","mappings":"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","sources":["components/Contact/Contact.styled.js","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","webpack://phonebook/./src/components/PhonebookForm/PhonebookForm.module.css?56c1","components/FormError/FormError.styled.js","components/FormError/FormError.jsx","components/PhonebookForm/PhonebookForm.jsx","pages/ContactsPage.styled.js","pages/ContactsPage.jsx"],"sourcesContent":["import { styled } from \"styled-components\";\n\nexport const Li = styled.li`\nposition: relative;\n  display: flex;\n  gap: 10px;\n`;\n\nexport const Span = styled.span`\n  font-family: 'Roboto', sans-serif;\n  color: #111111;\n  font-size: 24px;\n  font-weight: 500;\n  /* text-transform: capitalize; */\n`;\n\nexport const NumberSpan = styled.span`\nposition: absolute;\ntop: 0px;\nleft: 250px;\n\nfont-family: 'Roboto', sans-serif;\n  color: #111111;\n  font-size: 24px;\n  font-weight: 500;\n`;\nexport const Button = styled.button`\n  position: absolute;\n  top: 50%;\n  left: 580px;\n\n  transform: translate(-50%, -50%);\n\n  width: 50px;\n  height: 20px;\n  font-family: 'Roboto', sans-serif;\n  color: #111111;\n  font-size: 12px;\n  font-weight: 500;\n  cursor: pointer;\n`;\n\n","import React from 'react';\nimport { Button, Li, NumberSpan, Span } from './Contact.styled';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContactThunk } from 'redux/contactsOperations';\n\nexport const Contact = ({ visibleContacts }) => {\n  const dispatch = useDispatch();\n\n  const onRemoveContact = contactId => {\n    dispatch(deleteContactThunk(contactId));\n  };\n\n  return visibleContacts.map(({ id, name, number }) => (\n    <Li key={id}>\n      <Span>{name}:</Span>\n      <NumberSpan>{number}</NumberSpan>\n      <Button type=\"button\" onClick={() => onRemoveContact(id)}>\n        Delete\n      </Button>\n    </Li>\n  ));\n};\n\nContact.propTypes = {\n  visibleContacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { styled } from 'styled-components';\n\nexport const Ul = styled.ul`\n  width: 600px;\n  /* list-style: none; */\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin: 0;\n  border-radius: 6px;\n  padding: 20px;\n  background-color: white;\n  border: 1px solid black;\n`;\n","import { Contact } from 'components/Contact/Contact';\nimport React from 'react';\nimport { Ul } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/selectors';\n\nexport const ContactList = () => {\n  const visibleContacts = useSelector(selectFilteredContacts);\n\n  return (\n    <Ul>\n      <Contact visibleContacts={visibleContacts} />\n    </Ul>\n  );\n};\n","import { styled } from \"styled-components\";\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  margin-bottom: 30px;\n  /* margin-bottom: 20px; */\n`;\n\nexport const Span = styled.span`\n  font-family: 'Roboto', sans-serif;\n  color: #111111;\n  font-size: 24px;\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\n  width: 150px;\n`;\n","import React from 'react';\nimport { Input, Label, Span } from './Filter.styled';\nimport { nanoid } from 'nanoid';\n// import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\nimport { selectContactsFilter } from 'redux/selectors';\n\nexport const Filter = () => {\n  const filterValue = useSelector(selectContactsFilter);\n\n  const dispatch = useDispatch();\n\n  const onChangeFilter = event => {\n    dispatch(setFilter(event.currentTarget.value));\n  };\n\n  return (\n    <Label>\n      <Span>Filter</Span>\n\n      <Input\n        onChange={onChangeFilter}\n        value={filterValue}\n        type=\"text\"\n        id={nanoid(5)}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        required\n      />\n    </Label>\n  );\n};\n\n// Filter.propTypes = {\n//   value: PropTypes.string,\n//   onChangeFilter: PropTypes.func.isRequired,\n// };\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"PhonebookForm_title__+JucE\",\"formStyle\":\"PhonebookForm_formStyle__FN5Vq\",\"label\":\"PhonebookForm_label__a86iP\",\"span\":\"PhonebookForm_span__kLH1r\",\"input\":\"PhonebookForm_input__oekwR\",\"button\":\"PhonebookForm_button__ftF0u\"};","import { styled } from 'styled-components';\n\nexport const ErrorText = styled.ul`\n  font-size: 16px;\n  color: red;\n`;\n","import React from 'react';\nimport { ErrorText } from './FormError.styled';\nimport { ErrorMessage } from 'formik';\n\nexport const FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    ></ErrorMessage>\n  );\n};\n","import React from 'react';\nimport css from './PhonebookForm.module.css';\nimport { Formik, Form, Field } from 'formik';\nimport * as yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { FormError } from 'components/FormError/FormError';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { nanoid } from 'nanoid';\nimport { toastConfig } from 'services/data';\nimport { addContactThunk } from 'redux/contactsOperations';\nimport { selectContactsList } from 'redux/selectors';\n\nconst schema = yup.object().shape({\n  name: yup.string('no valid name').required('Required'),\n  number: yup.number('no valid name').required('Required').positive().integer(),\n});\n\nexport const PhonebookForm = ({ title }) => {\n  const contacts = useSelector(selectContactsList);\n\n  const dispatch = useDispatch();\n\n  const onAddContact = values => {\n    const isInContacts = contacts.some(\n      ({ name }) => name.toLowerCase() === values.name.toLowerCase()\n    );\n\n    if (isInContacts) {\n      toast.error(`${values.name} is already in contacts`, toastConfig);\n      return;\n    }\n\n    const finalContact = {\n      id: nanoid(5),\n      ...values,\n    };\n\n    dispatch(addContactThunk(finalContact));\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    onAddContact(values);\n    resetForm();\n  };\n\n  return (\n    <>\n      <h2 className={css.title}>{title}</h2>\n      <Formik\n        initialValues={{\n          name: '',\n          number: '',\n        }}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        <Form className={css.formStyle}>\n          <label className={css.label}>\n            <span className={css.span}>Name</span>\n            <Field\n              className={css.input}\n              type=\"text\"\n              name=\"name\"\n              autoComplete=\"true\"\n            />\n            <FormError name=\"name\" />\n          </label>\n          <label className={css.label}>\n            <span className={css.span}>Number</span>\n            <Field\n              className={css.input}\n              type=\"tel\"\n              name=\"number\"\n              autoComplete=\"true\"\n            />\n            <FormError name=\"number\" />\n          </label>\n\n          <button type=\"submit\" className={css.button}>\n            Add contact\n          </button>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n\nPhonebookForm.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import { styled } from 'styled-components';\n\nexport const TitleH2 = styled.h2`\n  font-family: 'Roboto', sans-serif;\n  color: #111111;\n  font-size: 48px;\n  font-weight: 500;\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  justify-content: center;\n  margin-bottom: 20px;\n`;\n","import { ContactList } from 'components/ContactList/ContactList'\nimport { Filter } from 'components/Filter/Filter'\nimport { Loader } from 'components/Loader/Loader'\nimport { PhonebookForm } from 'components/PhonebookForm/PhonebookForm'\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { requestContactsThunk } from 'redux/contactsOperations'\nimport { selectContactsList, selectError, selectIsLoading } from 'redux/selectors'\nimport { TitleH2 } from './ContactsPage.styled'\n\nconst ContactsPage = () => {\n    const contacts = useSelector(selectContactsList);\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n      dispatch(requestContactsThunk());\n    }, [dispatch]);\n  return (\n    <div\n      style={{\n        height: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        fontSize: 40,\n        color: '#010101',\n        paddingTop: 50,\n      }}\n      >\n        <PhonebookForm title=\"Phonebook\"></PhonebookForm>\n        <TitleH2>Contacts</TitleH2>\n\n        {contacts.length > 0 && (\n          <>\n            <Filter />\n            {isLoading && !error && <Loader />}\n            <ContactList />\n          </>\n        )}\n      </div>\n  )\n}\n\nexport default ContactsPage;"],"names":["Li","styled","_templateObject","_taggedTemplateLiteral","Span","_templateObject2","NumberSpan","_templateObject3","Button","_templateObject4","Contact","_ref","visibleContacts","dispatch","useDispatch","map","_ref2","id","name","number","_jsxs","children","_jsx","type","onClick","contactId","deleteContactThunk","Ul","ContactList","useSelector","selectFilteredContacts","Label","Input","Filter","filterValue","selectContactsFilter","onChange","event","setFilter","currentTarget","value","nanoid","pattern","required","ErrorText","FormError","ErrorMessage","render","message","schema","yup","shape","positive","integer","PhonebookForm","title","contacts","selectContactsList","_Fragment","className","css","Formik","initialValues","onSubmit","values","_ref3","resetForm","some","toLowerCase","toast","concat","toastConfig","finalContact","_objectSpread","addContactThunk","onAddContact","validationSchema","Form","Field","autoComplete","TitleH2","isLoading","selectIsLoading","error","selectError","useEffect","requestContactsThunk","style","height","display","flexDirection","alignItems","fontSize","color","paddingTop","length","Loader"],"sourceRoot":""}